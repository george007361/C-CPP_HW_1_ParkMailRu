os: linux
dist: focal
language: cpp

install:
 - sudo apt update
 - sudo apt install --yes libgtest-dev

jobs:
 include:
  - stage: cpplint
    script:
    #  - find $TRAVIS_BUILD_DIR/ -name "gtest" -prune -name "*.c" -o -name "*.h" -o -name "*.cpp"
     - cpplint $TRAVIS_BUILD_DIR/lib/graphs/include/graphs.h
     - cpplint $TRAVIS_BUILD_DIR/lib/graphs/tests/src/test_graphs.cpp
     - cpplint $TRAVIS_BUILD_DIR/lib/parallel_parser/include/parser.h
     - cpplint $TRAVIS_BUILD_DIR/lib/parallel_parser/tests/src/test_parallel_parser.cpp
     - cpplint $TRAVIS_BUILD_DIR/lib/serial_parser/include/parser.h
     - cpplint $TRAVIS_BUILD_DIR/lib/serial_parser/tests/src/test_serial_parser.cpp
     - cpplint $TRAVIS_BUILD_DIR/lib/utils/include/utils.h
  - stage: cppcheck
    script:
     - find . -name "gtest" -prune -name "*.c" -o -name "*.h" -o -name "*.cpp"
     - find . -name "gtest" -prune -name "*.c" -o -name "*.h" -o -name "*.cpp" | xargs cppcheck --enable=warning,performance,portability 
  - stage: scan-build
    script:
     - cmake -B build -DUSE_SERIAL=0
     - scan-build make -C build
     - cmake -B build -DUSE_SERIAL=1
     - scan-build make -C build
  - stage: clang-format
    before_script:
     - sudo apt install --yes clang-tools
     - sudo apt install --yes libllvm10
     - sudo apt install --yes clang-format-10
    script:
     - find . -name "gtest" -prune -name "*.c" -o -name "*.h" -o -name "*.cpp" | xargs clang-format-10 -dry-run -style=Google
  - stage: Build
    script:
     - cmake -B build
     - make -C build
  - stage: GTest
    script:
     - cmake -B build -DUSE_SERIAL=0 -DTEST_PARSER=1
     - make -C build
     - make -C build test_parser
     - $TRAVIS_BUILD_DIR/build/lib/parallel_parser/tests/test_parser
     - cmake -B build -DUSE_SERIAL=1 -DTEST_ALL=1
     - make -C build
     - make -C build test_parser
     - $TRAVIS_BUILD_DIR/build/lib/serial_parser/tests/test_parser
     - make -C build test_graphs
     - $TRAVIS_BUILD_DIR/build/lib/graphs/tests/test_graphs
  - stage: Coverage
    before_script:
     - sudo apt install --yes gcovr
    script:
     - cmake -B build -DUSE_SERIAL=1 -DWITH_COVERAGE=1
     - make -C build
     - cmake -B build -DUSE_SERIAL=0 -DWITH_COVERAGE=1
     - make -C build
     - curl -Os https://uploader.codecov.io/latest/linux/codecov
     - chmod +x codecov
     - $TRAVIS_BUILD_DIR/codecov -f <(gcovr -e '.*/tests/.*' -x)

  - stage: Sanitizers
    script:
     - cmake -B build -DUSE_SERIAL=0 -DWITH_SANITIZERS=1
     - make -C build
     - echo "----------PARALLEL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("
     - cmake -B build -DUSE_SERIAL=1 -DWITH_SANITIZERS=1
     - make -C build
     - echo "----------PARALLEL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("

  - stage: Valgrind
    before_script:
     - sudo apt install --yes valgrind
    script:
     - cmake -B build -DUSE_SERIAL=0
     - make -C build
     - echo "----------PARALLEL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - valgrind $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("
     - cmake -B build -DUSE_SERIAL=1
     - make -C build
     - echo "----------PARALLEL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - valgrind $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("
     