os: linux
dist: focal
language: cpp

install:
 - sudo apt update
 - sudo apt install --yes libgtest-dev

jobs:
 include:
 
  - stage: Build
    script:
     - cmake -B build
     - make -C build

  - stage: clang-tidy
    before_script:
     - sudo apt install --yes clang-tidy-10
    script:
     - echo "----------PARALLEL_PARSER-------------"
     - cmake -B build -DUSE_SERIAL=0 -DCMAKE_EXPORT_COMPILE_COMMANDS=1
     - find -name "*.c" -o -name "*.h" | egrep -v "gtest|build|serial" | xargs clang-tidy-10 -p ./build/compile_commands.json -checks=*,-cert-err34-c,-android-cloexec-fopen,-llvm-*,-readability-avoid-const-params-in-decls,-hicpp-signed-bitwise
     - echo "----------SERIAL_PARSER-------------"
     - cmake -B build -DUSE_SERIAL=1 -DCMAKE_EXPORT_COMPILE_COMMANDS=1
     - find -name "*.c" -o -name "*.h" | egrep -v "gtest|build|parallel" | xargs clang-tidy-10 -p ./build/compile_commands.json -checks=*,-cert-err34-c,-android-cloexec-fopen,-llvm-*,-readability-avoid-const-params-in-decls,-hicpp-signed-bitwise

  - stage: GTest
    script:
     - echo "----------PARALLEL_PARSER-------------"
     - cmake -B build -DUSE_SERIAL=0 -DTEST_PARSER=1
     - make -C build
     - make -C build test_parser
     - $TRAVIS_BUILD_DIR/build/lib/parallel_parser/tests/test_parser
     - echo "----------SERIAL PARSER-------------"
     - cmake -B build -DUSE_SERIAL=1 -DTEST_ALL=1
     - make -C build
     - make -C build test_parser
     - $TRAVIS_BUILD_DIR/build/lib/serial_parser/tests/test_parser
     - echo "----------GRAPHS-------------"
     - make -C build test_graphs
     - $TRAVIS_BUILD_DIR/build/lib/graphs/tests/test_graphs

  - stage: Coverage
    before_script:
     - sudo apt install --yes gcovr
    script:
     - cmake -B build -DWITH_COVERAGE=1
     - make -C build
     - $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":(" --bufsize 50
     - curl -Os https://uploader.codecov.io/latest/linux/codecov
     - chmod +x codecov
     - $TRAVIS_BUILD_DIR/codecov -t "359aa7ea-6ea3-4f92-a92e-adc834cbbf72" -f <(gcovr -e 'gtest/' -x)

  - stage: Sanitizers
    script:
     - cmake -B build -DUSE_SERIAL=0 -DWITH_SANITIZERS=1
     - make -C build
     - echo "----------PARALLEL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("
     - cmake -B build -DUSE_SERIAL=1 -DWITH_SANITIZERS=1
     - make -C build
     - echo "----------SERIAL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("

  - stage: Valgrind
    before_script:
     - sudo apt install --yes valgrind
    script:
     - cmake -B build -DUSE_SERIAL=0
     - make -C build
     - echo "----------PARALLEL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - valgrind $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("
     - cmake -B build -DUSE_SERIAL=1
     - make -C build
     - echo "----------SERIAL_PARSER-------------"
     - echo "----------ALL OK-------------"
     - valgrind $TRAVIS_BUILD_DIR/build/main --filepath $TRAVIS_BUILD_DIR/data/ex.txt --graph ":)" --graph ":("
     
  - stage: cpplint
    before_script:
     - sudo pip install cpplint
    script:
     - find -name "*.c" -o -name "*.h" -o -name "*.cpp" | egrep -v "gtest|build" | xargs cpplint --filter=-runtime/int,-readability/casting,-build/include_subdir 
  
  - stage: cppcheck
    before_script:
     - sudo apt install cppcheck
    script:
     - find -name "*.c" -o -name "*.h" -o -name "*.cpp" | egrep -v "gtest|build" | xargs cppcheck --enable=warning,performance,portability 
 
  - stage: scan-build
    before_script:
     - sudo apt install cppcheck
    script:
     - echo "----------PARALLEL_PARSER-------------"
     - cmake -B build -DUSE_SERIAL=0
     - scan-build make -C build
     - echo "----------SERIAL_PARSER-------------"
     - cmake -B build -DUSE_SERIAL=1
     - scan-build make -C build
  
  - stage: clang-format
    before_script:
     - sudo apt install --yes clang-format-10
    script:
     - find -name "*.c" -o -name "*.h" | egrep -v "gtest|build|serial" | xargs clang-format-10 -dry-run -style=Google